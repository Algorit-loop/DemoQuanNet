@model QuanNet.Models.ComputerUsage
@{
    ViewData["Title"] = "Phiên sử dụng hiện tại";
    var currentBalance = ViewBag.CurrentBalance;
}

<div class="card">
    <div class="card-header">
        <h2>@ViewData["Title"]</h2>
    </div>
    <div class="card-body">
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">
                @TempData["Error"]
            </div>
        }
        @if (TempData["Warning"] != null)
        {
            <div class="alert alert-warning">
                @TempData["Warning"]
            </div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">
                @TempData["Success"]
            </div>
        }

        @if (Model != null)
        {
            <div class="row">
                <div class="col-md-6">
                    <h4>Thông tin phiên</h4>
                    <dl class="row">
                        <dt class="col-sm-4">Máy</dt>
                        <dd class="col-sm-8">@Model.Computer.Name</dd>

                        <dt class="col-sm-4">Giá/giờ</dt>
                        <dd class="col-sm-8">@Model.Computer.HourlyRate.ToString("N0") VNĐ</dd>

                        <dt class="col-sm-4">Số dư</dt>
                        <dd class="col-sm-8">@ViewBag.CurrentBalance.ToString("N0") VNĐ</dd>

                        <dt class="col-sm-4">Bắt đầu</dt>
                        <dd class="col-sm-8">@Model.StartTime.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</dd>

                        <dt class="col-sm-4">Thời gian sử dụng</dt>
                        <dd class="col-sm-8">
                            <span id="duration">00:00:00</span>
                        </dd>

                        <dt class="col-sm-4">Tạm tính</dt>
                        <dd class="col-sm-8">
                            <span id="estimatedCost">...</span>
                        </dd>
                    </dl>

                    <form asp-action="EndSession" method="post" class="mt-3" id="endSessionForm">
                        <input type="hidden" name="isAutoEnd" id="isAutoEnd" value="false" />
                        <button type="submit" class="btn btn-danger">Kết thúc phiên</button>
                    </form>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                Bạn chưa có phiên sử dụng nào.
                <a asp-action="AvailableComputers" class="btn btn-primary ml-3">Chọn máy</a>
            </div>
        }
    </div>
</div>

@section Scripts {
    @if (Model != null)
    {
        <script>
            let isEndingSession = false;

            function endSession(isAuto = false) {
                if (isEndingSession) return;
                isEndingSession = true;
                
                document.getElementById('isAutoEnd').value = isAuto;
                document.getElementById('endSessionForm').submit();
            }

            function updateDuration() {
                // Convert UTC start time to local time
                const startTime = new Date('@Model.StartTime.ToString("yyyy-MM-ddTHH:mm:ss")Z');
                const now = new Date();
                const diff = now - startTime;
                
                const hours = Math.floor(diff / 3600000);
                const minutes = Math.floor((diff % 3600000) / 60000);
                const seconds = Math.floor((diff % 60000) / 1000);
                
                const duration = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                document.getElementById('duration').textContent = duration;

                // Calculate cost per second
                const hourlyRate = @Model.Computer.HourlyRate;
                const secondlyRate = hourlyRate / 3600; // Convert hourly rate to per-second rate
                const secondsUsed = Math.floor(diff / 1000); // Convert milliseconds to seconds
                const estimatedCost = Math.ceil(secondsUsed * secondlyRate);
                document.getElementById('estimatedCost').textContent = estimatedCost.toLocaleString('vi-VN') + ' VNĐ';

                // Check if cost exceeds balance
                const currentBalance = @ViewBag.CurrentBalance;
                if (estimatedCost >= currentBalance && !isEndingSession) {
                    endSession(true);
                }
            }

            // Update every second
            setInterval(updateDuration, 1000);
            updateDuration();
        </script>
    }
}